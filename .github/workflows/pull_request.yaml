name: Pull Request
on: [pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: lint go
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.40.1
          ./bin/golangci-lint run --timeout=5m --color=always --max-same-issues=0 --max-issues-per-linter=0

  acceptance:
    name: Acceptance
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: checkout source
        uses: actions/checkout@v2

      - name: build
        run: make build

      - name: unit tests
        run: make test

      - name: install bats ubuntu
        run: sudo npm install -g bats
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: install bats macos
        run: sudo npm install -g bats
        if: ${{ matrix.os == 'macos-latest' }}

      - name: install bats windows
        run: npm install -g bats
        if: ${{ matrix.os == 'windows-latest' }}

      - name: acceptance tests *nix
        run: make acceptance
        if: ${{ matrix.os != 'windows-latest' }}

      - name: acceptance tests windows
        run: |
          $env:Path += ";C:\npm\prefix\node_modules\bats\libexec\bats-core"
          make acceptance
        if: ${{ matrix.os == 'windows-latest' }}

  docker-tests:
    name: Docker Tests
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: docker build
        run: make docker-build

      - name: test create command
        run: docker run -v $PWD:/konstraint konstraint create /konstraint/examples

      - name: test doc command
        run: docker run -v $PWD:/konstraint konstraint doc /konstraint/examples

  policy-tests:
    name: Policy Tests
    runs-on: ubuntu-latest
    container: openpolicyagent/conftest:latest
    steps:
      - name: checkout source
        uses: actions/checkout@v2

      - name: verify policies
        run: conftest verify -p examples -d examples/test-data
